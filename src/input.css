@tailwind base;
@tailwind components;
@tailwind utilities;


.card-zoom {
    @apply relative flex items-center justify-center m-3 overflow-hidden shadow-xl w-96 h-60 rounded-2xl;
  }
  .card-zoom-image {
    @apply absolute w-full h-full transition-all duration-500 ease-in-out transform bg-center bg-cover;
  }
  .card-zoom-text {
    @apply absolute text-5xl font-black transition-all duration-500 ease-in-out transform scale-150 text-gray-600 opacity-60;
  }
  .card-zoom:hover .card-zoom-image {
    @apply scale-150;
  }
  .card-zoom:hover .card-zoom-text {
    @apply scale-100;
  }

  /* 3D Text Box Following cursor CSS */
  :root {
    --pink: hsl(338, 70%, 55%);
    --teal: hsl(183, 70%, 62%);
    --white: hsl(334, 7%, 95%);
  }
  
  
  pre {
    --selector: var(--pink);
    --property: var(--teal);
    --punctuation: var(--white);
    --undefined: var(--white);
  
    font-size: 3rem;
    font-weight: bold;
    color: var(--undefined);
    background: hsl(222, 45%, 7%);
    padding: 2rem;
    border-radius: 1rem;
  
    position: relative;
  
    transform-style: preserve-3d;
    transform: perspective(5000px) rotateY(var(--rotateX)) rotateX(var(--rotateY));
  }
  
  pre > * {
    text-shadow: 0 0 0.3em currentColor;
  }
  
  pre::before,
  pre::after {
    content: "";
    position: absolute;
    border-radius: inherit;
  }
  
  /* shadow */
  pre::before {
    inset: 0.75rem;
    border-radius: inherit;
    background: black;
    z-index: -1;
    transform: translateZ(-50px);
    filter: blur(15px);
    opacity: 0.5;
  }
  
  /* gradient thingy */
  pre::after {
    z-index: -2;
    inset: -1rem;
    background: linear-gradient(-45deg, red, blue);
    transform: translateZ(-50px);
  }
  
  .selector {
    color: var(--selector);
  }
  
  .property {
    color: var(--property);
  }
  
  .punctuation {
    color: var(--punctuation);
  }
  
  .property + .punctuation {
    color: var(--property);
  }
  
  .pre-container {
    position: relative;
    display: grid;
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
  }
  
  